language: java
jdk: 
    - openjdk8
branches:
    only:
        - master
     
cache:
    directories:
        - '$HOME/.m2/repository'
        - '$HOME/.gradle'
before_install:
    - chmod +x ./gradlew 
script: "./gradlew clean build"


before_deploy:
    #- zip -r springboot-webservice *
    #- mkdir -p deploy
    #- mv springboot-webservice.zip deploy/springboot-webservice.zip
    
    # before-deploy는 배포 파일만 선별
    - mkdir -p before-deploy
    - cp scripts/*.sh before-deploy/       # deploy.sh
    - cp appspec.yml before-deploy/        # apspec.yml - codedeploy 설정
    - cp build/libs/*.war before-deploy/   # springboot-webservice-xxx.war 
    
    - cd before-deploy && zip -r before-deploy *
    
    - cd .. && mkdir -p deploy
    - mv before-deploy/before-deploy.zip deploy/springboot-webservice.zip


deploy:
    - provider: s3
      access_key_id: $AWS_ACCESS_KEY
      secret_access_key: $ACCESS_SECRET_KEY
      bucket: a2student7-springboot-webservice   # S3 버킷
      region: ap-south-1                           # S3 버킷 리전
      skip_cleanup: true
      acl: private
      local_dir: deploy
      wait-until-deployed: true
     
    - provider: codedeploy
      access_key_id: $AWS_ACCESS_KEY
      secret_access_key: $ACCESS_SECRET_KEY
      bucket: a2student7-springboot-webservice
      key: springboot-webservice.zip
      bundle_type: zip
      application: springboot-webservice     # AWS 콘솔에서 등록한 CodeDeploy 애플리케이션
      deployment_group: springboot-webservice-group             #  CodeDeploy 배포 그룹
      region: ap-south-1
      wait-until-deployed: true
      
      
       
notification:
    email:
        recipients:
            - kimheewoon@naver.com
